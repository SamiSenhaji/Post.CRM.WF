//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrmWebApiEarlyBoundGenerator
{
    using System.Reflection;
    using System.Linq;
    using System;
    using System.Collections.Generic;
    using System.Dynamic;
    using System.Diagnostics.CodeAnalysis;


    [ExcludeFromCodeCoverageAttribute()]
    public class QuoteClose : Entity
    {

        public new const string EntityLogicalName = "quoteclose";

        public new const string EntitySetName = "quotecloses";

        public new const string PrimaryIdAttribute = "activityid";

        public QuoteClose()
        {
        }

        public QuoteClose(ExpandoObject expandoObject) :
                base(expandoObject)
        {
        }

        // <summary>
        // Additional information provided by the external application as JSON. For internal use only.
        // </summary>
        public String ActivityAdditionalParams
        {
            get
            {
                return this.GetAttributeValue<String>("ActivityAdditionalParams");
            }
            set
            {
                this.SetAttributeValue("ActivityAdditionalParams", value);
            }
        }

        // <summary>
        // Unique identifier of the quote close activity.
        // </summary>
        public Guid? ActivityId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("ActivityId");
            }
            set
            {
                this.SetAttributeValue("ActivityId", value);
            }
        }

        // <summary>
        // Actual duration of the quote close activity in minutes.
        // </summary>
        public int? ActualDurationMinutes
        {
            get
            {
                return this.GetAttributeValue<int?>("ActualDurationMinutes");
            }
            set
            {
                this.SetAttributeValue("ActualDurationMinutes", value);
            }
        }

        // <summary>
        // Actual end time of the quote close activity.
        // </summary>
        [OnlyDate()]
        public DateTime? ActualEnd
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ActualEnd");
            }
            set
            {
                this.SetAttributeValue("ActualEnd", value);
            }
        }

        // <summary>
        // Actual start time of the quote close activity.
        // </summary>
        [OnlyDate()]
        public DateTime? ActualStart
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ActualStart");
            }
            set
            {
                this.SetAttributeValue("ActualStart", value);
            }
        }

        // <summary>
        // Category of the quote close activity.
        // </summary>
        public String Category
        {
            get
            {
                return this.GetAttributeValue<String>("Category");
            }
            set
            {
                this.SetAttributeValue("Category", value);
            }
        }

        // <summary>
        // Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.
        // </summary>
        public int? Community
        {
            get
            {
                return this.GetAttributeValue<int?>("Community");
            }
            set
            {
                this.SetAttributeValue("Community", value);
            }
        }

        // <summary>
        // Unique identifier of the user who created the quote close activity.
        // </summary>
        [EntityReference("systemusers", "_createdby_value")]
        public EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("createdby_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("createdby_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Shows the external party who created the record.
        // </summary>
        [EntityReference("externalparties", "_createdbyexternalparty_value")]
        public EntityReference CreatedByExternalParty
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("CreatedByExternalParty@odata.bind");
            }
            set
            {
                this.SetAttributeValue("CreatedByExternalParty@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the quote close activity was created.
        // </summary>
        public DateTime? CreatedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("CreatedOn");
            }
            set
            {
                this.SetAttributeValue("CreatedOn", value);
            }
        }

        // <summary>
        // Unique identifier of the delegate user who created the quoteclose.
        // </summary>
        [EntityReference("systemusers", "_createdonbehalfby_value")]
        public EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("createdonbehalfby_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("createdonbehalfby_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the delivery of the activity was last attempted.
        // </summary>
        public DateTime? DeliveryLastAttemptedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("DeliveryLastAttemptedOn");
            }
            set
            {
                this.SetAttributeValue("DeliveryLastAttemptedOn", value);
            }
        }

        // <summary>
        // Priority of delivery of the activity to the email server.
        // </summary>
        public int? DeliveryPriorityCode
        {
            get
            {
                return this.GetAttributeValue<int?>("DeliveryPriorityCode");
            }
            set
            {
                this.SetAttributeValue("DeliveryPriorityCode", value);
            }
        }

        // <summary>
        // Activity generated when a quote is closed.
        // </summary>
        public String Description
        {
            get
            {
                return this.GetAttributeValue<String>("Description");
            }
            set
            {
                this.SetAttributeValue("Description", value);
            }
        }

        // <summary>
        // The message id of activity which is returned from Exchange Server.
        // </summary>
        public String ExchangeItemId
        {
            get
            {
                return this.GetAttributeValue<String>("ExchangeItemId");
            }
            set
            {
                this.SetAttributeValue("ExchangeItemId", value);
            }
        }

        // <summary>
        // Exchange rate for the currency associated with the activitypointer with respect to the base currency.
        // </summary>
        public decimal? ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ExchangeRate");
            }
            set
            {
                this.SetAttributeValue("ExchangeRate", value);
            }
        }

        // <summary>
        // Shows the web link of Activity of type email.
        // </summary>
        public String ExchangeWebLink
        {
            get
            {
                return this.GetAttributeValue<String>("ExchangeWebLink");
            }
            set
            {
                this.SetAttributeValue("ExchangeWebLink", value);
            }
        }

        // <summary>
        // Sequence number of the import that created this record.
        // </summary>
        public int? ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<int?>("ImportSequenceNumber");
            }
            set
            {
                this.SetAttributeValue("ImportSequenceNumber", value);
            }
        }

        // <summary>
        // Type of instance of a recurring series.
        // </summary>
        public int? InstanceTypeCode
        {
            get
            {
                return this.GetAttributeValue<int?>("InstanceTypeCode");
            }
            set
            {
                this.SetAttributeValue("InstanceTypeCode", value);
            }
        }

        // <summary>
        // Information about whether the quote close activity was billed as part of resolving a case.
        // </summary>
        public bool? IsBilled
        {
            get
            {
                return this.GetAttributeValue<bool?>("IsBilled");
            }
            set
            {
                this.SetAttributeValue("IsBilled", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public bool? IsMapiPrivate
        {
            get
            {
                return this.GetAttributeValue<bool?>("IsMapiPrivate");
            }
            set
            {
                this.SetAttributeValue("IsMapiPrivate", value);
            }
        }

        // <summary>
        // Information regarding whether the activity is a regular activity type or event type.
        // </summary>
        public bool? IsRegularActivity
        {
            get
            {
                return this.GetAttributeValue<bool?>("IsRegularActivity");
            }
            set
            {
                this.SetAttributeValue("IsRegularActivity", value);
            }
        }

        // <summary>
        // Information that specifies if the quote close activity was created from a workflow rule.
        // </summary>
        public bool? IsWorkflowCreated
        {
            get
            {
                return this.GetAttributeValue<bool?>("IsWorkflowCreated");
            }
            set
            {
                this.SetAttributeValue("IsWorkflowCreated", value);
            }
        }

        // <summary>
        // Contains the date and time stamp of the last on hold time.
        // </summary>
        public DateTime? LastOnHoldTime
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("LastOnHoldTime");
            }
            set
            {
                this.SetAttributeValue("LastOnHoldTime", value);
            }
        }

        // <summary>
        // Left the voice mail
        // </summary>
        public bool? LeftVoiceMail
        {
            get
            {
                return this.GetAttributeValue<bool?>("LeftVoiceMail");
            }
            set
            {
                this.SetAttributeValue("LeftVoiceMail", value);
            }
        }

        // <summary>
        // Unique identifier of the user who last modified the quote close activity.
        // </summary>
        [EntityReference("systemusers", "_modifiedby_value")]
        public EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("modifiedby_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("modifiedby_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Shows the external party who modified the record.
        // </summary>
        [EntityReference("externalparties", "_modifiedbyexternalparty_value")]
        public EntityReference ModifiedByExternalParty
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ModifiedByExternalParty@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ModifiedByExternalParty@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the quote close activity was last modified.
        // </summary>
        public DateTime? ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ModifiedOn");
            }
            set
            {
                this.SetAttributeValue("ModifiedOn", value);
            }
        }

        // <summary>
        // Unique identifier of the delegate user who last modified the quoteclose.
        // </summary>
        [EntityReference("systemusers", "_modifiedonbehalfby_value")]
        public EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("modifiedonbehalfby_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("modifiedonbehalfby_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Shows how long, in minutes, that the record was on hold.
        // </summary>
        public int? OnHoldTime
        {
            get
            {
                return this.GetAttributeValue<int?>("OnHoldTime");
            }
            set
            {
                this.SetAttributeValue("OnHoldTime", value);
            }
        }

        // <summary>
        // Date and time that the record was migrated.
        // </summary>
        [OnlyDate()]
        public DateTime? OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("OverriddenCreatedOn");
            }
            set
            {
                this.SetAttributeValue("OverriddenCreatedOn", value);
            }
        }

        // <summary>
        // Unique identifier of the user or team who owns the activity.
        // </summary>
        [EntityReference("systemusers", "_ownerid_value")]
        public EntityReference OwnerId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("OwnerId@odata.bind");
            }
            set
            {
                this.SetAttributeValue("OwnerId@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier of the business unit that owns the activity.
        // </summary>
        [EntityReference("businessunits", "_owningbusinessunit_value")]
        public EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owningbusinessunit_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owningbusinessunit_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier of the team that owns the activity.
        // </summary>
        [EntityReference("teams", "_owningteam_value")]
        public EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owningteam_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owningteam_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier of the user that owns the activity.
        // </summary>
        [EntityReference("systemusers", "_owninguser_value")]
        public EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owninguser_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owninguser_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public DateTime? PostponeActivityProcessingUntil
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("PostponeActivityProcessingUntil");
            }
            set
            {
                this.SetAttributeValue("PostponeActivityProcessingUntil", value);
            }
        }

        // <summary>
        // Priority of the activity.
        // </summary>
        public int? PriorityCode
        {
            get
            {
                return this.GetAttributeValue<int?>("PriorityCode");
            }
            set
            {
                this.SetAttributeValue("PriorityCode", value);
            }
        }

        // <summary>
        // Unique identifier of the Process.
        // </summary>
        public Guid? ProcessId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("ProcessId");
            }
            set
            {
                this.SetAttributeValue("ProcessId", value);
            }
        }

        // <summary>
        // Unique identifier of the quote with which the quote close activity is associated.
        // </summary>
        [EntityReference("quotes", "_quoteid_value")]
        public EntityReference QuoteId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("quoteid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("quoteid@odata.bind", value);
            }
        }

        // <summary>
        // Quote number.
        // </summary>
        public String QuoteNumber
        {
            get
            {
                return this.GetAttributeValue<String>("QuoteNumber");
            }
            set
            {
                this.SetAttributeValue("QuoteNumber", value);
            }
        }

        // <summary>
        // Unique identifier of the object with which the activity is associated.
        // </summary>
        [EntityReference("accounts", "_regardingobjectid_value")]
        public EntityReference RegardingObjectId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("regardingobjectid_account_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("regardingobjectid_account_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Quote revision number.
        // </summary>
        public int? Revision
        {
            get
            {
                return this.GetAttributeValue<int?>("Revision");
            }
            set
            {
                this.SetAttributeValue("Revision", value);
            }
        }

        // <summary>
        // Scheduled duration of the quote close activity, specified in minutes.
        // </summary>
        public int? ScheduledDurationMinutes
        {
            get
            {
                return this.GetAttributeValue<int?>("ScheduledDurationMinutes");
            }
            set
            {
                this.SetAttributeValue("ScheduledDurationMinutes", value);
            }
        }

        // <summary>
        // Scheduled end time of the quote close activity.
        // </summary>
        [OnlyDate()]
        public DateTime? ScheduledEnd
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ScheduledEnd");
            }
            set
            {
                this.SetAttributeValue("ScheduledEnd", value);
            }
        }

        // <summary>
        // Scheduled start time of the quote close activity.
        // </summary>
        [OnlyDate()]
        public DateTime? ScheduledStart
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ScheduledStart");
            }
            set
            {
                this.SetAttributeValue("ScheduledStart", value);
            }
        }

        // <summary>
        // Unique identifier of the mailbox associated with the sender of the email message.
        // </summary>
        [EntityReference("mailboxes", "_sendermailboxid_value")]
        public EntityReference SenderMailboxId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("sendermailboxid_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("sendermailboxid_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the activity was sent.
        // </summary>
        public DateTime? SentOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("SentOn");
            }
            set
            {
                this.SetAttributeValue("SentOn", value);
            }
        }

        // <summary>
        // Uniqueidentifier specifying the id of recurring series of an instance.
        // </summary>
        public Guid? SeriesId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("SeriesId");
            }
            set
            {
                this.SetAttributeValue("SeriesId", value);
            }
        }

        // <summary>
        // Unique identifier of the service with which the quote close activity is associated.
        // </summary>
        [EntityReference("services", "_serviceid_value")]
        public EntityReference ServiceId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("serviceid_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("serviceid_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Choose the service level agreement (SLA) that you want to apply to the case record.
        // </summary>
        [EntityReference("slas", "_slaid_value")]
        public EntityReference SLAId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("sla_activitypointer_sla_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("sla_activitypointer_sla_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Last SLA that was applied to this case. This field is for internal use only.
        // </summary>
        [EntityReference("slas", "_slainvokedid_value")]
        public EntityReference SLAInvokedId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("slainvokedid_activitypointer_sla_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("slainvokedid_activitypointer_sla_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // Shows the date and time by which the activities are sorted.
        // </summary>
        public DateTime? SortDate
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("SortDate");
            }
            set
            {
                this.SetAttributeValue("SortDate", value);
            }
        }

        // <summary>
        // Unique identifier of the Stage.
        // </summary>
        public Guid? StageId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("StageId");
            }
            set
            {
                this.SetAttributeValue("StageId", value);
            }
        }

        // <summary>
        // Shows whether the quote close activity is open, completed, or canceled.  By default, quote close activities are completed.
        // </summary>
        public int? StateCode
        {
            get
            {
                return this.GetAttributeValue<int?>("StateCode");
            }
            set
            {
                this.SetAttributeValue("StateCode", value);
            }
        }

        // <summary>
        // Reason for the status of the quote close activity.
        // </summary>
        public int? StatusCode
        {
            get
            {
                return this.GetAttributeValue<int?>("StatusCode");
            }
            set
            {
                this.SetAttributeValue("StatusCode", value);
            }
        }

        // <summary>
        // Subcategory of the quote close activity.
        // </summary>
        public String Subcategory
        {
            get
            {
                return this.GetAttributeValue<String>("Subcategory");
            }
            set
            {
                this.SetAttributeValue("Subcategory", value);
            }
        }

        // <summary>
        // Subject associated with the quote close activity.
        // </summary>
        public String Subject
        {
            get
            {
                return this.GetAttributeValue<String>("Subject");
            }
            set
            {
                this.SetAttributeValue("Subject", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public int? TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<int?>("TimeZoneRuleVersionNumber");
            }
            set
            {
                this.SetAttributeValue("TimeZoneRuleVersionNumber", value);
            }
        }

        // <summary>
        // Unique identifier of the currency associated with the activitypointer.
        // </summary>
        [EntityReference("transactioncurrencies", "_transactioncurrencyid_value")]
        public EntityReference TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("transactioncurrencyid_quoteclose@odata.bind");
            }
            set
            {
                this.SetAttributeValue("transactioncurrencyid_quoteclose@odata.bind", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public String TraversedPath
        {
            get
            {
                return this.GetAttributeValue<String>("TraversedPath");
            }
            set
            {
                this.SetAttributeValue("TraversedPath", value);
            }
        }

        // <summary>
        // Time zone code that was in use when the record was created.
        // </summary>
        public int? UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<int?>("UTCConversionTimeZoneCode");
            }
            set
            {
                this.SetAttributeValue("UTCConversionTimeZoneCode", value);
            }
        }

        // <summary>
        // Version number of the activity.
        // </summary>
        public long? VersionNumber
        {
            get
            {
                return this.GetAttributeValue<long?>("VersionNumber");
            }
            set
            {
                this.SetAttributeValue("VersionNumber", value);
            }
        }

        public class Fields
        {

            public const string _CreatedBy_value = "_createdby_value";

            public const string _CreatedByExternalParty_value = "_createdbyexternalparty_value";

            public const string _CreatedOnBehalfBy_value = "_createdonbehalfby_value";

            public const string _ModifiedBy_value = "_modifiedby_value";

            public const string _ModifiedByExternalParty_value = "_modifiedbyexternalparty_value";

            public const string _ModifiedOnBehalfBy_value = "_modifiedonbehalfby_value";

            public const string _OwnerId_value = "_ownerid_value";

            public const string _OwningBusinessUnit_value = "_owningbusinessunit_value";

            public const string _OwningTeam_value = "_owningteam_value";

            public const string _OwningUser_value = "_owninguser_value";

            public const string _QuoteId_value = "_quoteid_value";

            public const string _RegardingObjectId_value = "_regardingobjectid_value";

            public const string _SenderMailboxId_value = "_sendermailboxid_value";

            public const string _ServiceId_value = "_serviceid_value";

            public const string _SLAId_value = "_slaid_value";

            public const string _SLAInvokedId_value = "_slainvokedid_value";

            public const string _TransactionCurrencyId_value = "_transactioncurrencyid_value";

            public const string ActivityAdditionalParams = "activityadditionalparams";

            public const string ActivityId = "activityid";

            public const string ActivityTypeCode = "activitytypecode";

            public const string ActivityTypeCodeName = "activitytypecodename";

            public const string ActualDurationMinutes = "actualdurationminutes";

            public const string ActualEnd = "actualend";

            public const string ActualStart = "actualstart";

            public const string BCC = "bcc";

            public const string Category = "category";

            public const string CC = "cc";

            public const string Community = "community";

            public const string CommunityName = "communityname";

            public const string CreatedBy = "createdby";

            public const string CreatedByExternalParty = "createdbyexternalparty";

            public const string CreatedByExternalPartyName = "createdbyexternalpartyname";

            public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";

            public const string CreatedByName = "createdbyname";

            public const string CreatedByYomiName = "createdbyyominame";

            public const string CreatedOn = "createdon";

            public const string CreatedOnBehalfBy = "createdonbehalfby";

            public const string CreatedOnBehalfByName = "createdonbehalfbyname";

            public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";

            public const string Customers = "customers";

            public const string DeliveryLastAttemptedOn = "deliverylastattemptedon";

            public const string DeliveryPriorityCode = "deliveryprioritycode";

            public const string DeliveryPriorityCodeName = "deliveryprioritycodename";

            public const string Description = "description";

            public const string ExchangeItemId = "exchangeitemid";

            public const string ExchangeRate = "exchangerate";

            public const string ExchangeWebLink = "exchangeweblink";

            public const string From = "from";

            public const string ImportSequenceNumber = "importsequencenumber";

            public const string InstanceTypeCode = "instancetypecode";

            public const string InstanceTypeCodeName = "instancetypecodename";

            public const string IsBilled = "isbilled";

            public const string IsBilledName = "isbilledname";

            public const string IsMapiPrivate = "ismapiprivate";

            public const string IsMapiPrivateName = "ismapiprivatename";

            public const string IsRegularActivity = "isregularactivity";

            public const string IsRegularActivityName = "isregularactivityname";

            public const string IsWorkflowCreated = "isworkflowcreated";

            public const string IsWorkflowCreatedName = "isworkflowcreatedname";

            public const string LastOnHoldTime = "lastonholdtime";

            public const string LeftVoiceMail = "leftvoicemail";

            public const string LeftVoiceMailName = "leftvoicemailname";

            public const string ModifiedBy = "modifiedby";

            public const string ModifiedByExternalParty = "modifiedbyexternalparty";

            public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";

            public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";

            public const string ModifiedByName = "modifiedbyname";

            public const string ModifiedByYomiName = "modifiedbyyominame";

            public const string ModifiedOn = "modifiedon";

            public const string ModifiedOnBehalfBy = "modifiedonbehalfby";

            public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";

            public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";

            public const string OnHoldTime = "onholdtime";

            public const string OptionalAttendees = "optionalattendees";

            public const string Organizer = "organizer";

            public const string OverriddenCreatedOn = "overriddencreatedon";

            public const string OwnerId = "ownerid";

            public const string OwnerIdName = "owneridname";

            public const string OwnerIdType = "owneridtype";

            public const string OwnerIdYomiName = "owneridyominame";

            public const string OwningBusinessUnit = "owningbusinessunit";

            public const string OwningTeam = "owningteam";

            public const string OwningUser = "owninguser";

            public const string Partners = "partners";

            public const string PostponeActivityProcessingUntil = "postponeactivityprocessinguntil";

            public const string PriorityCode = "prioritycode";

            public const string PriorityCodeName = "prioritycodename";

            public const string ProcessId = "processid";

            public const string QuoteId = "quoteid";

            public const string QuoteIdName = "quoteidname";

            public const string QuoteIdType = "quoteidtype";

            public const string QuoteNumber = "quotenumber";

            public const string RegardingObjectId = "regardingobjectid";

            public const string RegardingObjectIdName = "regardingobjectidname";

            public const string RegardingObjectIdYomiName = "regardingobjectidyominame";

            public const string RegardingObjectTypeCode = "regardingobjecttypecode";

            public const string RequiredAttendees = "requiredattendees";

            public const string Resources = "resources";

            public const string Revision = "revision";

            public const string ScheduledDurationMinutes = "scheduleddurationminutes";

            public const string ScheduledEnd = "scheduledend";

            public const string ScheduledStart = "scheduledstart";

            public const string SenderMailboxId = "sendermailboxid";

            public const string SenderMailboxIdName = "sendermailboxidname";

            public const string SentOn = "senton";

            public const string SeriesId = "seriesid";

            public const string ServiceId = "serviceid";

            public const string ServiceIdName = "serviceidname";

            public const string SLAId = "slaid";

            public const string SLAInvokedId = "slainvokedid";

            public const string SLAInvokedIdName = "slainvokedidname";

            public const string SLAName = "slaname";

            public const string SortDate = "sortdate";

            public const string StageId = "stageid";

            public const string StateCode = "statecode";

            public const string StateCodeName = "statecodename";

            public const string StatusCode = "statuscode";

            public const string StatusCodeName = "statuscodename";

            public const string Subcategory = "subcategory";

            public const string Subject = "subject";

            public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";

            public const string To = "to";

            public const string TransactionCurrencyId = "transactioncurrencyid";

            public const string TransactionCurrencyIdName = "transactioncurrencyidname";

            public const string TraversedPath = "traversedpath";

            public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";

            public const string VersionNumber = "versionnumber";

            public const string Id = "activityid";
        }

        public class Properties
        {

            public const string activityid_activitypointer = "activityid_activitypointer";

            public const string createdby_quoteclose = "createdby_quoteclose";

            public const string CreatedByExternalParty = "CreatedByExternalParty";

            public const string createdonbehalfby_quoteclose = "createdonbehalfby_quoteclose";

            public const string modifiedby_quoteclose = "modifiedby_quoteclose";

            public const string ModifiedByExternalParty = "ModifiedByExternalParty";

            public const string modifiedonbehalfby_quoteclose = "modifiedonbehalfby_quoteclose";

            public const string ownerid_quoteclose = "ownerid_quoteclose";

            public const string owningbusinessunit_quoteclose = "owningbusinessunit_quoteclose";

            public const string owningteam_quoteclose = "owningteam_quoteclose";

            public const string owninguser_quoteclose = "owninguser_quoteclose";

            public const string quoteid = "quoteid";

            public const string regardingobjectid_account_quoteclose = "regardingobjectid_account_quoteclose";

            public const string regardingobjectid_bookableresourcebooking_quoteclose = "regardingobjectid_bookableresourcebooking_quoteclose";

            public const string regardingobjectid_bookableresourcebookingheader_quoteclose = "regardingobjectid_bookableresourcebookingheader_quoteclose";

            public const string regardingobjectid_bulkoperation_quoteclose = "regardingobjectid_bulkoperation_quoteclose";

            public const string regardingobjectid_campaign_quoteclose = "regardingobjectid_campaign_quoteclose";

            public const string regardingobjectid_campaignactivity_quoteclose = "regardingobjectid_campaignactivity_quoteclose";

            public const string regardingobjectid_entitlement_quoteclose = "regardingobjectid_entitlement_quoteclose";

            public const string regardingobjectid_entitlementtemplate_quoteclose = "regardingobjectid_entitlementtemplate_quoteclose";

            public const string regardingobjectid_incident_quoteclose = "regardingobjectid_incident_quoteclose";

            public const string regardingobjectid_knowledgearticle_quoteclose = "regardingobjectid_knowledgearticle_quoteclose";

            public const string regardingobjectid_knowledgebaserecord_quoteclose = "regardingobjectid_knowledgebaserecord_quoteclose";

            public const string regardingobjectid_lead_quoteclose = "regardingobjectid_lead_quoteclose";

            public const string regardingobjectid_msdyn_customerasset_quoteclose = "regardingobjectid_msdyn_customerasset_quoteclose";

            public const string regardingobjectid_msdyn_playbookinstance_quoteclose = "regardingobjectid_msdyn_playbookinstance_quoteclose";

            public const string regardingobjectid_new_interactionforemail_quoteclose = "regardingobjectid_new_interactionforemail_quoteclose";

            public const string regardingobjectid_opportunity_quoteclose = "regardingobjectid_opportunity_quoteclose";

            public const string regardingobjectid_quote_quoteclose = "regardingobjectid_quote_quoteclose";

            public const string regardingobjectid_site_quoteclose = "regardingobjectid_site_quoteclose";

            public const string sendermailboxid_quoteclose = "sendermailboxid_quoteclose";

            public const string serviceid_quoteclose = "serviceid_quoteclose";

            public const string sla_activitypointer_sla_quoteclose = "sla_activitypointer_sla_quoteclose";

            public const string slainvokedid_activitypointer_sla_quoteclose = "slainvokedid_activitypointer_sla_quoteclose";

            public const string transactioncurrencyid_quoteclose = "transactioncurrencyid_quoteclose";
        }

        public class Schemas
        {

            public const string ActivityAdditionalParams = "ActivityAdditionalParams";

            public const string ActivityId = "ActivityId";

            public const string ActivityTypeCode = "ActivityTypeCode";

            public const string ActivityTypeCodeName = "ActivityTypeCodeName";

            public const string ActualDurationMinutes = "ActualDurationMinutes";

            public const string ActualEnd = "ActualEnd";

            public const string ActualStart = "ActualStart";

            public const string BCC = "BCC";

            public const string Category = "Category";

            public const string CC = "CC";

            public const string Community = "Community";

            public const string CommunityName = "CommunityName";

            public const string CreatedBy = "CreatedBy";

            public const string CreatedByExternalParty = "CreatedByExternalParty";

            public const string CreatedByExternalPartyName = "CreatedByExternalPartyName";

            public const string CreatedByExternalPartyYomiName = "CreatedByExternalPartyYomiName";

            public const string CreatedByName = "CreatedByName";

            public const string CreatedByYomiName = "CreatedByYomiName";

            public const string CreatedOn = "CreatedOn";

            public const string CreatedOnBehalfBy = "CreatedOnBehalfBy";

            public const string CreatedOnBehalfByName = "CreatedOnBehalfByName";

            public const string CreatedOnBehalfByYomiName = "CreatedOnBehalfByYomiName";

            public const string Customers = "Customers";

            public const string DeliveryLastAttemptedOn = "DeliveryLastAttemptedOn";

            public const string DeliveryPriorityCode = "DeliveryPriorityCode";

            public const string DeliveryPriorityCodeName = "DeliveryPriorityCodeName";

            public const string Description = "Description";

            public const string ExchangeItemId = "ExchangeItemId";

            public const string ExchangeRate = "ExchangeRate";

            public const string ExchangeWebLink = "ExchangeWebLink";

            public const string From = "From";

            public const string ImportSequenceNumber = "ImportSequenceNumber";

            public const string InstanceTypeCode = "InstanceTypeCode";

            public const string InstanceTypeCodeName = "InstanceTypeCodeName";

            public const string IsBilled = "IsBilled";

            public const string IsBilledName = "IsBilledName";

            public const string IsMapiPrivate = "IsMapiPrivate";

            public const string IsMapiPrivateName = "IsMapiPrivateName";

            public const string IsRegularActivity = "IsRegularActivity";

            public const string IsRegularActivityName = "IsRegularActivityName";

            public const string IsWorkflowCreated = "IsWorkflowCreated";

            public const string IsWorkflowCreatedName = "IsWorkflowCreatedName";

            public const string LastOnHoldTime = "LastOnHoldTime";

            public const string LeftVoiceMail = "LeftVoiceMail";

            public const string LeftVoiceMailName = "LeftVoiceMailName";

            public const string ModifiedBy = "ModifiedBy";

            public const string ModifiedByExternalParty = "ModifiedByExternalParty";

            public const string ModifiedByExternalPartyName = "ModifiedByExternalPartyName";

            public const string ModifiedByExternalPartyYomiName = "ModifiedByExternalPartyYomiName";

            public const string ModifiedByName = "ModifiedByName";

            public const string ModifiedByYomiName = "ModifiedByYomiName";

            public const string ModifiedOn = "ModifiedOn";

            public const string ModifiedOnBehalfBy = "ModifiedOnBehalfBy";

            public const string ModifiedOnBehalfByName = "ModifiedOnBehalfByName";

            public const string ModifiedOnBehalfByYomiName = "ModifiedOnBehalfByYomiName";

            public const string OnHoldTime = "OnHoldTime";

            public const string OptionalAttendees = "OptionalAttendees";

            public const string Organizer = "Organizer";

            public const string OverriddenCreatedOn = "OverriddenCreatedOn";

            public const string OwnerId = "OwnerId";

            public const string OwnerIdName = "OwnerIdName";

            public const string OwnerIdType = "OwnerIdType";

            public const string OwnerIdYomiName = "OwnerIdYomiName";

            public const string OwningBusinessUnit = "OwningBusinessUnit";

            public const string OwningTeam = "OwningTeam";

            public const string OwningUser = "OwningUser";

            public const string Partners = "Partners";

            public const string PostponeActivityProcessingUntil = "PostponeActivityProcessingUntil";

            public const string PriorityCode = "PriorityCode";

            public const string PriorityCodeName = "PriorityCodeName";

            public const string ProcessId = "ProcessId";

            public const string QuoteId = "QuoteId";

            public const string QuoteIdName = "QuoteIdName";

            public const string QuoteIdType = "QuoteIdType";

            public const string QuoteNumber = "QuoteNumber";

            public const string RegardingObjectId = "RegardingObjectId";

            public const string RegardingObjectIdName = "RegardingObjectIdName";

            public const string RegardingObjectIdYomiName = "RegardingObjectIdYomiName";

            public const string RegardingObjectTypeCode = "RegardingObjectTypeCode";

            public const string RequiredAttendees = "RequiredAttendees";

            public const string Resources = "Resources";

            public const string Revision = "Revision";

            public const string ScheduledDurationMinutes = "ScheduledDurationMinutes";

            public const string ScheduledEnd = "ScheduledEnd";

            public const string ScheduledStart = "ScheduledStart";

            public const string SenderMailboxId = "SenderMailboxId";

            public const string SenderMailboxIdName = "SenderMailboxIdName";

            public const string SentOn = "SentOn";

            public const string SeriesId = "SeriesId";

            public const string ServiceId = "ServiceId";

            public const string ServiceIdName = "ServiceIdName";

            public const string SLAId = "SLAId";

            public const string SLAInvokedId = "SLAInvokedId";

            public const string SLAInvokedIdName = "SLAInvokedIdName";

            public const string SLAName = "SLAName";

            public const string SortDate = "SortDate";

            public const string StageId = "StageId";

            public const string StateCode = "StateCode";

            public const string StateCodeName = "StateCodeName";

            public const string StatusCode = "StatusCode";

            public const string StatusCodeName = "StatusCodeName";

            public const string Subcategory = "Subcategory";

            public const string Subject = "Subject";

            public const string TimeZoneRuleVersionNumber = "TimeZoneRuleVersionNumber";

            public const string To = "To";

            public const string TransactionCurrencyId = "TransactionCurrencyId";

            public const string TransactionCurrencyIdName = "TransactionCurrencyIdName";

            public const string TraversedPath = "TraversedPath";

            public const string UTCConversionTimeZoneCode = "UTCConversionTimeZoneCode";

            public const string VersionNumber = "VersionNumber";
        }
    }
}
