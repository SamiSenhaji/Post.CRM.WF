//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrmWebApiEarlyBoundGenerator
{
    using System.Reflection;
    using System.Linq;
    using System;
    using System.Collections.Generic;
    using System.Dynamic;
    using System.Diagnostics.CodeAnalysis;


    [ExcludeFromCodeCoverageAttribute()]
    public class Quote : Entity
    {

        public new const string EntityLogicalName = "quote";

        public new const string EntitySetName = "quotes";

        public new const string PrimaryIdAttribute = "quoteid";

        public Quote()
        {
        }

        public Quote(ExpandoObject expandoObject) :
                base(expandoObject)
        {
        }

        // <summary>
        // Unique identifier of the account with which the quote is associated.
        // </summary>
        [EntityReference("accounts", "_accountid_value")]
        public EntityReference AccountId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("AccountId@odata.bind");
            }
            set
            {
                this.SetAttributeValue("AccountId@odata.bind", value);
            }
        }

        public int? ainos_BusinessType
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_BusinessType");
            }
            set
            {
                this.SetAttributeValue("ainos_BusinessType", value);
            }
        }

        public decimal? ainos_EstimatedOneShotRevenue
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ainos_EstimatedOneShotRevenue");
            }
            set
            {
                this.SetAttributeValue("ainos_EstimatedOneShotRevenue", value);
            }
        }

        // <summary>
        // Value of the Estimated One Shot Revenue in base currency.
        // </summary>
        public decimal? ainos_estimatedoneshotrevenue_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ainos_estimatedoneshotrevenue_Base");
            }
            set
            {
                this.SetAttributeValue("ainos_estimatedoneshotrevenue_Base", value);
            }
        }

        public decimal? ainos_EstimatedRecurringRevenue
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ainos_EstimatedRecurringRevenue");
            }
            set
            {
                this.SetAttributeValue("ainos_EstimatedRecurringRevenue", value);
            }
        }

        // <summary>
        // Value of the Estimated Recurring Revenue in base currency.
        // </summary>
        public decimal? ainos_estimatedrecurringrevenue_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ainos_estimatedrecurringrevenue_Base");
            }
            set
            {
                this.SetAttributeValue("ainos_estimatedrecurringrevenue_Base", value);
            }
        }

        public int? ainos_int_DurationinMonth
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_int_DurationinMonth");
            }
            set
            {
                this.SetAttributeValue("ainos_int_DurationinMonth", value);
            }
        }

        [EntityReference("accounts", "_ainos_lk_customer_value")]
        public EntityReference ainos_lk_Customer
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ainos_lk_Customer@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ainos_lk_Customer@odata.bind", value);
            }
        }

        [EntityReference("contacts", "_ainos_lk_decisionmakercontact_value")]
        public EntityReference ainos_lk_DecisionMakerContact
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ainos_lk_DecisionMakerContact@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ainos_lk_DecisionMakerContact@odata.bind", value);
            }
        }

        [EntityReference("systemusers", "_ainos_managertoapprove_value")]
        public EntityReference ainos_managertoapprove
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ainos_managertoapprove@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ainos_managertoapprove@odata.bind", value);
            }
        }

        public String ainos_mastersapreference
        {
            get
            {
                return this.GetAttributeValue<String>("ainos_mastersapreference");
            }
            set
            {
                this.SetAttributeValue("ainos_mastersapreference", value);
            }
        }

        public String ainos_OpporunityID
        {
            get
            {
                return this.GetAttributeValue<String>("ainos_OpporunityID");
            }
            set
            {
                this.SetAttributeValue("ainos_OpporunityID", value);
            }
        }

        public int? ainos_os_level1
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_os_level1");
            }
            set
            {
                this.SetAttributeValue("ainos_os_level1", value);
            }
        }

        public int? ainos_quoteapproved
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_quoteapproved");
            }
            set
            {
                this.SetAttributeValue("ainos_quoteapproved", value);
            }
        }

        public int? ainos_requestforapproval
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_requestforapproval");
            }
            set
            {
                this.SetAttributeValue("ainos_requestforapproval", value);
            }
        }

        [EntityReference("systemusers", "_ainos_salesassistant_value")]
        public EntityReference ainos_SalesAssistant
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ainos_SalesAssistant@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ainos_SalesAssistant@odata.bind", value);
            }
        }

        [EntityReference("systemusers", "_ainos_secondaccountmanagerid_value")]
        public EntityReference ainos_secondaccountmanagerid
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ainos_secondaccountmanagerid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ainos_secondaccountmanagerid@odata.bind", value);
            }
        }

        public int? ainos_StatusQuote
        {
            get
            {
                return this.GetAttributeValue<int?>("ainos_StatusQuote");
            }
            set
            {
                this.SetAttributeValue("ainos_StatusQuote", value);
            }
        }

        // <summary>
        // Unique identifier of the billing address.
        // </summary>
        public Guid? BillTo_AddressId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("BillTo_AddressId");
            }
            set
            {
                this.SetAttributeValue("BillTo_AddressId", value);
            }
        }

        // <summary>
        // Type the city for the customer's billing address.
        // </summary>
        public String BillTo_City
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_City");
            }
            set
            {
                this.SetAttributeValue("BillTo_City", value);
            }
        }

        // <summary>
        // Shows the complete Bill To address.
        // </summary>
        public String BillTo_Composite
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Composite");
            }
            set
            {
                this.SetAttributeValue("BillTo_Composite", value);
            }
        }

        // <summary>
        // Type the primary contact name at the customer's billing address.
        // </summary>
        public String BillTo_ContactName
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_ContactName");
            }
            set
            {
                this.SetAttributeValue("BillTo_ContactName", value);
            }
        }

        // <summary>
        // Type the country or region for the customer's billing address.
        // </summary>
        public String BillTo_Country
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Country");
            }
            set
            {
                this.SetAttributeValue("BillTo_Country", value);
            }
        }

        // <summary>
        // Type the fax number for the customer's billing address.
        // </summary>
        public String BillTo_Fax
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Fax");
            }
            set
            {
                this.SetAttributeValue("BillTo_Fax", value);
            }
        }

        // <summary>
        // Type the first line of the customer's billing address.
        // </summary>
        public String BillTo_Line1
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Line1");
            }
            set
            {
                this.SetAttributeValue("BillTo_Line1", value);
            }
        }

        // <summary>
        // Type the second line of the customer's billing address.
        // </summary>
        public String BillTo_Line2
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Line2");
            }
            set
            {
                this.SetAttributeValue("BillTo_Line2", value);
            }
        }

        // <summary>
        // Type the third line of the billing address.
        // </summary>
        public String BillTo_Line3
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Line3");
            }
            set
            {
                this.SetAttributeValue("BillTo_Line3", value);
            }
        }

        // <summary>
        // Type a name for the customer's billing address, such as "Headquarters" or "Field office", to identify the address.
        // </summary>
        public String BillTo_Name
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Name");
            }
            set
            {
                this.SetAttributeValue("BillTo_Name", value);
            }
        }

        // <summary>
        // Type the ZIP Code or postal code for the billing address.
        // </summary>
        public String BillTo_PostalCode
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_PostalCode");
            }
            set
            {
                this.SetAttributeValue("BillTo_PostalCode", value);
            }
        }

        // <summary>
        // Type the state or province for the billing address.
        // </summary>
        public String BillTo_StateOrProvince
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_StateOrProvince");
            }
            set
            {
                this.SetAttributeValue("BillTo_StateOrProvince", value);
            }
        }

        // <summary>
        // Type the phone number for the customer's billing address.
        // </summary>
        public String BillTo_Telephone
        {
            get
            {
                return this.GetAttributeValue<String>("BillTo_Telephone");
            }
            set
            {
                this.SetAttributeValue("BillTo_Telephone", value);
            }
        }

        // <summary>
        // Shows the campaign that the order was created from.
        // </summary>
        [EntityReference("campaigns", "_campaignid_value")]
        public EntityReference CampaignId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("campaignid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("campaignid@odata.bind", value);
            }
        }

        // <summary>
        // Enter the date when the quote was closed to indicate the expiration, revision, or cancellation date.
        // </summary>
        [OnlyDate()]
        public DateTime? ClosedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ClosedOn");
            }
            set
            {
                this.SetAttributeValue("ClosedOn", value);
            }
        }

        // <summary>
        // Unique identifier of the contact associated with the quote.
        // </summary>
        [EntityReference("contacts", "_contactid_value")]
        public EntityReference ContactId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("ContactId@odata.bind");
            }
            set
            {
                this.SetAttributeValue("ContactId@odata.bind", value);
            }
        }

        // <summary>
        // Shows who created the record.
        // </summary>
        [EntityReference("systemusers", "_createdby_value")]
        public EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("createdby@odata.bind");
            }
            set
            {
                this.SetAttributeValue("createdby@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the record was created.
        // </summary>
        public DateTime? CreatedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("CreatedOn");
            }
            set
            {
                this.SetAttributeValue("CreatedOn", value);
            }
        }

        // <summary>
        // Shows who created the record on behalf of another user.
        // </summary>
        [EntityReference("systemusers", "_createdonbehalfby_value")]
        public EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("createdonbehalfby@odata.bind");
            }
            set
            {
                this.SetAttributeValue("createdonbehalfby@odata.bind", value);
            }
        }

        // <summary>
        // Type additional information to describe the quote, such as the products or services offered or details about the customer's product preferences.
        // </summary>
        public String Description
        {
            get
            {
                return this.GetAttributeValue<String>("Description");
            }
            set
            {
                this.SetAttributeValue("Description", value);
            }
        }

        // <summary>
        // Type the discount amount for the quote if the customer is eligible for special savings.
        // </summary>
        public decimal? DiscountAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("DiscountAmount");
            }
            set
            {
                this.SetAttributeValue("DiscountAmount", value);
            }
        }

        // <summary>
        // Value of the Quote Discount Amount in base currency.
        // </summary>
        public decimal? DiscountAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("DiscountAmount_Base");
            }
            set
            {
                this.SetAttributeValue("DiscountAmount_Base", value);
            }
        }

        // <summary>
        // Type the discount rate that should be applied to the Detail Amount field to include additional savings for the customer in the quote.
        // </summary>
        public decimal? DiscountPercentage
        {
            get
            {
                return this.GetAttributeValue<decimal?>("DiscountPercentage");
            }
            set
            {
                this.SetAttributeValue("DiscountPercentage", value);
            }
        }

        // <summary>
        // Enter the date when the quote pricing is effective or was first communicated to the customer.
        // </summary>
        [OnlyDate()]
        public DateTime? EffectiveFrom
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("EffectiveFrom");
            }
            set
            {
                this.SetAttributeValue("EffectiveFrom", value);
            }
        }

        // <summary>
        // Enter the expiration date or last day the quote pricing is effective for the customer.
        // </summary>
        [OnlyDate()]
        public DateTime? EffectiveTo
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("EffectiveTo");
            }
            set
            {
                this.SetAttributeValue("EffectiveTo", value);
            }
        }

        // <summary>
        // The primary email address for the entity.
        // </summary>
        public String EmailAddress
        {
            get
            {
                return this.GetAttributeValue<String>("EmailAddress");
            }
            set
            {
                this.SetAttributeValue("EmailAddress", value);
            }
        }

        // <summary>
        // Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        // </summary>
        public decimal? ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<decimal?>("ExchangeRate");
            }
            set
            {
                this.SetAttributeValue("ExchangeRate", value);
            }
        }

        // <summary>
        // Enter the date a decision or order is due from the customer to indicate the expiration date of the quote.
        // </summary>
        [OnlyDate()]
        public DateTime? ExpiresOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ExpiresOn");
            }
            set
            {
                this.SetAttributeValue("ExpiresOn", value);
            }
        }

        // <summary>
        // Type the cost of freight or shipping for the products included in the quote for use in calculating the Total Amount field.
        // </summary>
        public decimal? FreightAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("FreightAmount");
            }
            set
            {
                this.SetAttributeValue("FreightAmount", value);
            }
        }

        // <summary>
        // Value of the Freight Amount in base currency.
        // </summary>
        public decimal? FreightAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("FreightAmount_Base");
            }
            set
            {
                this.SetAttributeValue("FreightAmount_Base", value);
            }
        }

        // <summary>
        // Select the freight terms to make sure shipping charges are processed correctly.
        // </summary>
        public int? FreightTermsCode
        {
            get
            {
                return this.GetAttributeValue<int?>("FreightTermsCode");
            }
            set
            {
                this.SetAttributeValue("FreightTermsCode", value);
            }
        }

        // <summary>
        // Sequence number of the import that created this record.
        // </summary>
        public int? ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<int?>("ImportSequenceNumber");
            }
            set
            {
                this.SetAttributeValue("ImportSequenceNumber", value);
            }
        }

        // <summary>
        // Contains the date time stamp of the last on hold time.
        // </summary>
        public DateTime? LastOnHoldTime
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("LastOnHoldTime");
            }
            set
            {
                this.SetAttributeValue("LastOnHoldTime", value);
            }
        }

        // <summary>
        // Shows who last updated the record.
        // </summary>
        [EntityReference("systemusers", "_modifiedby_value")]
        public EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("modifiedby@odata.bind");
            }
            set
            {
                this.SetAttributeValue("modifiedby@odata.bind", value);
            }
        }

        // <summary>
        // Date and time when the record was modified.
        // </summary>
        public DateTime? ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("ModifiedOn");
            }
            set
            {
                this.SetAttributeValue("ModifiedOn", value);
            }
        }

        // <summary>
        // Shows who last updated the record on behalf of another user.
        // </summary>
        [EntityReference("systemusers", "_modifiedonbehalfby_value")]
        public EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("modifiedonbehalfby@odata.bind");
            }
            set
            {
                this.SetAttributeValue("modifiedonbehalfby@odata.bind", value);
            }
        }

        // <summary>
        // Type a descriptive name for the quote.
        // </summary>
        public String Name
        {
            get
            {
                return this.GetAttributeValue<String>("Name");
            }
            set
            {
                this.SetAttributeValue("Name", value);
            }
        }

        // <summary>
        // Shows the duration in minutes for which the quote was on hold.
        // </summary>
        public int? OnHoldTime
        {
            get
            {
                return this.GetAttributeValue<int?>("OnHoldTime");
            }
            set
            {
                this.SetAttributeValue("OnHoldTime", value);
            }
        }

        // <summary>
        // Choose the opportunity that the quote is related to for reporting and analytics.
        // </summary>
        [EntityReference("opportunities", "_opportunityid_value")]
        public EntityReference OpportunityId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("opportunityid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("opportunityid@odata.bind", value);
            }
        }

        // <summary>
        // Date and time that the record was migrated.
        // </summary>
        [OnlyDate()]
        public DateTime? OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("OverriddenCreatedOn");
            }
            set
            {
                this.SetAttributeValue("OverriddenCreatedOn", value);
            }
        }

        // <summary>
        // Owner Id
        // </summary>
        [EntityReference("systemusers", "_ownerid_value")]
        public EntityReference OwnerId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("OwnerId@odata.bind");
            }
            set
            {
                this.SetAttributeValue("OwnerId@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier for the business unit that owns the record
        // </summary>
        [EntityReference("businessunits", "_owningbusinessunit_value")]
        public EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owningbusinessunit@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owningbusinessunit@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier for the team that owns the record.
        // </summary>
        [EntityReference("teams", "_owningteam_value")]
        public EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owningteam@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owningteam@odata.bind", value);
            }
        }

        // <summary>
        // Unique identifier for the user that owns the record.
        // </summary>
        [EntityReference("systemusers", "_owninguser_value")]
        public EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("owninguser@odata.bind");
            }
            set
            {
                this.SetAttributeValue("owninguser@odata.bind", value);
            }
        }

        // <summary>
        // Select the payment terms to indicate when the customer needs to pay the total amount.
        // </summary>
        public int? PaymentTermsCode
        {
            get
            {
                return this.GetAttributeValue<int?>("PaymentTermsCode");
            }
            set
            {
                this.SetAttributeValue("PaymentTermsCode", value);
            }
        }

        // <summary>
        // Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.
        // </summary>
        [EntityReference("pricelevels", "_pricelevelid_value")]
        public EntityReference PriceLevelId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("pricelevelid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("pricelevelid@odata.bind", value);
            }
        }

        // <summary>
        // Pricing error for the quote.
        // </summary>
        public int? PricingErrorCode
        {
            get
            {
                return this.GetAttributeValue<int?>("PricingErrorCode");
            }
            set
            {
                this.SetAttributeValue("PricingErrorCode", value);
            }
        }

        // <summary>
        // Contains the id of the process associated with the entity.
        // </summary>
        public Guid? ProcessId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("ProcessId");
            }
            set
            {
                this.SetAttributeValue("ProcessId", value);
            }
        }

        // <summary>
        // Unique identifier of the quote.
        // </summary>
        public Guid? QuoteId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("QuoteId");
            }
            set
            {
                this.SetAttributeValue("QuoteId", value);
            }
        }

        // <summary>
        // Shows the quote number for customer reference and searching capabilities. The number cannot be modified.
        // </summary>
        public String QuoteNumber
        {
            get
            {
                return this.GetAttributeValue<String>("QuoteNumber");
            }
            set
            {
                this.SetAttributeValue("QuoteNumber", value);
            }
        }

        // <summary>
        // Enter the delivery date requested by the customer for all products in the quote.
        // </summary>
        [OnlyDate()]
        public DateTime? RequestDeliveryBy
        {
            get
            {
                return this.GetAttributeValue<DateTime?>("RequestDeliveryBy");
            }
            set
            {
                this.SetAttributeValue("RequestDeliveryBy", value);
            }
        }

        // <summary>
        // Shows the version number of the quote for revision history tracking.
        // </summary>
        public int? RevisionNumber
        {
            get
            {
                return this.GetAttributeValue<int?>("RevisionNumber");
            }
            set
            {
                this.SetAttributeValue("RevisionNumber", value);
            }
        }

        // <summary>
        // Select a shipping method for deliveries sent to this address.
        // </summary>
        public int? ShippingMethodCode
        {
            get
            {
                return this.GetAttributeValue<int?>("ShippingMethodCode");
            }
            set
            {
                this.SetAttributeValue("ShippingMethodCode", value);
            }
        }

        // <summary>
        // Unique identifier of the shipping address.
        // </summary>
        public Guid? ShipTo_AddressId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("ShipTo_AddressId");
            }
            set
            {
                this.SetAttributeValue("ShipTo_AddressId", value);
            }
        }

        // <summary>
        // Type the city for the customer's shipping address.
        // </summary>
        public String ShipTo_City
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_City");
            }
            set
            {
                this.SetAttributeValue("ShipTo_City", value);
            }
        }

        // <summary>
        // Shows the complete Ship To address.
        // </summary>
        public String ShipTo_Composite
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Composite");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Composite", value);
            }
        }

        // <summary>
        // Type the primary contact name at the customer's shipping address.
        // </summary>
        public String ShipTo_ContactName
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_ContactName");
            }
            set
            {
                this.SetAttributeValue("ShipTo_ContactName", value);
            }
        }

        // <summary>
        // Type the country or region for the customer's shipping address.
        // </summary>
        public String ShipTo_Country
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Country");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Country", value);
            }
        }

        // <summary>
        // Type the fax number for the customer's shipping address.
        // </summary>
        public String ShipTo_Fax
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Fax");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Fax", value);
            }
        }

        // <summary>
        // Select the freight terms to make sure shipping orders are processed correctly.
        // </summary>
        public int? ShipTo_FreightTermsCode
        {
            get
            {
                return this.GetAttributeValue<int?>("ShipTo_FreightTermsCode");
            }
            set
            {
                this.SetAttributeValue("ShipTo_FreightTermsCode", value);
            }
        }

        // <summary>
        // Type the first line of the customer's shipping address.
        // </summary>
        public String ShipTo_Line1
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Line1");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Line1", value);
            }
        }

        // <summary>
        // Type the second line of the customer's shipping address.
        // </summary>
        public String ShipTo_Line2
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Line2");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Line2", value);
            }
        }

        // <summary>
        // Type the third line of the shipping address.
        // </summary>
        public String ShipTo_Line3
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Line3");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Line3", value);
            }
        }

        // <summary>
        // Type a name for the customer's shipping address, such as "Headquarters" or "Field office",  to identify the address.
        // </summary>
        public String ShipTo_Name
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Name");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Name", value);
            }
        }

        // <summary>
        // Type the ZIP Code or postal code for the shipping address.
        // </summary>
        public String ShipTo_PostalCode
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_PostalCode");
            }
            set
            {
                this.SetAttributeValue("ShipTo_PostalCode", value);
            }
        }

        // <summary>
        // Type the state or province for the shipping address.
        // </summary>
        public String ShipTo_StateOrProvince
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_StateOrProvince");
            }
            set
            {
                this.SetAttributeValue("ShipTo_StateOrProvince", value);
            }
        }

        // <summary>
        // Type the phone number for the customer's shipping address.
        // </summary>
        public String ShipTo_Telephone
        {
            get
            {
                return this.GetAttributeValue<String>("ShipTo_Telephone");
            }
            set
            {
                this.SetAttributeValue("ShipTo_Telephone", value);
            }
        }

        // <summary>
        // Skip Price Calculation (For Internal use)
        // </summary>
        public int? SkipPriceCalculation
        {
            get
            {
                return this.GetAttributeValue<int?>("SkipPriceCalculation");
            }
            set
            {
                this.SetAttributeValue("SkipPriceCalculation", value);
            }
        }

        // <summary>
        // Choose the service level agreement (SLA) that you want to apply to the quote record.
        // </summary>
        [EntityReference("slas", "_slaid_value")]
        public EntityReference SLAId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("sla_quote_sla@odata.bind");
            }
            set
            {
                this.SetAttributeValue("sla_quote_sla@odata.bind", value);
            }
        }

        // <summary>
        // Last SLA that was applied to this quote. This field is for internal use only.
        // </summary>
        [EntityReference("slas", "_slainvokedid_value")]
        public EntityReference SLAInvokedId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("slainvokedid_quote_sla@odata.bind");
            }
            set
            {
                this.SetAttributeValue("slainvokedid_quote_sla@odata.bind", value);
            }
        }

        // <summary>
        // Contains the id of the stage where the entity is located.
        // </summary>
        public Guid? StageId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("StageId");
            }
            set
            {
                this.SetAttributeValue("StageId", value);
            }
        }

        // <summary>
        // Shows whether the quote is draft, active, won, or closed. Only draft quotes can be edited.
        // </summary>
        public int? StateCode
        {
            get
            {
                return this.GetAttributeValue<int?>("StateCode");
            }
            set
            {
                this.SetAttributeValue("StateCode", value);
            }
        }

        // <summary>
        // Select the quote's status.
        // </summary>
        public int? StatusCode
        {
            get
            {
                return this.GetAttributeValue<int?>("StatusCode");
            }
            set
            {
                this.SetAttributeValue("StatusCode", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public int? TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<int?>("TimeZoneRuleVersionNumber");
            }
            set
            {
                this.SetAttributeValue("TimeZoneRuleVersionNumber", value);
            }
        }

        // <summary>
        // Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the quote.
        // </summary>
        public decimal? TotalAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalAmount");
            }
            set
            {
                this.SetAttributeValue("TotalAmount", value);
            }
        }

        // <summary>
        // Value of the Total Amount in base currency.
        // </summary>
        public decimal? TotalAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalAmount_Base");
            }
            set
            {
                this.SetAttributeValue("TotalAmount_Base", value);
            }
        }

        // <summary>
        // Shows the total product amount for the quote, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount due for the quote.
        // </summary>
        public decimal? TotalAmountLessFreight
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalAmountLessFreight");
            }
            set
            {
                this.SetAttributeValue("TotalAmountLessFreight", value);
            }
        }

        // <summary>
        // Value of the Total Pre-Freight Amount in base currency.
        // </summary>
        public decimal? TotalAmountLessFreight_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalAmountLessFreight_Base");
            }
            set
            {
                this.SetAttributeValue("TotalAmountLessFreight_Base", value);
            }
        }

        // <summary>
        // Shows the total discount amount, based on the discount price and rate entered on the quote.
        // </summary>
        public decimal? TotalDiscountAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalDiscountAmount");
            }
            set
            {
                this.SetAttributeValue("TotalDiscountAmount", value);
            }
        }

        // <summary>
        // Value of the Total Discount Amount in base currency.
        // </summary>
        public decimal? TotalDiscountAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalDiscountAmount_Base");
            }
            set
            {
                this.SetAttributeValue("TotalDiscountAmount_Base", value);
            }
        }

        // <summary>
        // Shows the sum of all existing and write-in products included on the quote, based on the specified price list and quantities.
        // </summary>
        public decimal? TotalLineItemAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalLineItemAmount");
            }
            set
            {
                this.SetAttributeValue("TotalLineItemAmount", value);
            }
        }

        // <summary>
        // Value of the Total Detail Amount in base currency.
        // </summary>
        public decimal? TotalLineItemAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalLineItemAmount_Base");
            }
            set
            {
                this.SetAttributeValue("TotalLineItemAmount_Base", value);
            }
        }

        // <summary>
        // Shows the total of the Manual Discount amounts specified on all products included in the quote. This value is reflected in the Detail Amount field on the quote and is added to any discount amount or rate specified on the quote
        // </summary>
        public decimal? TotalLineItemDiscountAmount
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalLineItemDiscountAmount");
            }
            set
            {
                this.SetAttributeValue("TotalLineItemDiscountAmount", value);
            }
        }

        // <summary>
        // Value of the Total Line Item Discount Amount in base currency.
        // </summary>
        public decimal? TotalLineItemDiscountAmount_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalLineItemDiscountAmount_Base");
            }
            set
            {
                this.SetAttributeValue("TotalLineItemDiscountAmount_Base", value);
            }
        }

        // <summary>
        // Shows the total of the Tax amounts specified on all products included in the quote, included in the Total Amount due calculation for the quote.
        // </summary>
        public decimal? TotalTax
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalTax");
            }
            set
            {
                this.SetAttributeValue("TotalTax", value);
            }
        }

        // <summary>
        // Value of the Total Tax in base currency.
        // </summary>
        public decimal? TotalTax_Base
        {
            get
            {
                return this.GetAttributeValue<decimal?>("TotalTax_Base");
            }
            set
            {
                this.SetAttributeValue("TotalTax_Base", value);
            }
        }

        // <summary>
        // Choose the local currency for the record to make sure budgets are reported in the correct currency.
        // </summary>
        [EntityReference("transactioncurrencies", "_transactioncurrencyid_value")]
        public EntityReference TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<EntityReference>("transactioncurrencyid@odata.bind");
            }
            set
            {
                this.SetAttributeValue("transactioncurrencyid@odata.bind", value);
            }
        }

        // <summary>
        // A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
        // </summary>
        public String TraversedPath
        {
            get
            {
                return this.GetAttributeValue<String>("TraversedPath");
            }
            set
            {
                this.SetAttributeValue("TraversedPath", value);
            }
        }

        // <summary>
        // For internal use only.
        // </summary>
        public Guid? UniqueDscId
        {
            get
            {
                return this.GetAttributeValue<Guid?>("UniqueDscId");
            }
            set
            {
                this.SetAttributeValue("UniqueDscId", value);
            }
        }

        // <summary>
        // Time zone code that was in use when the record was created.
        // </summary>
        public int? UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<int?>("UTCConversionTimeZoneCode");
            }
            set
            {
                this.SetAttributeValue("UTCConversionTimeZoneCode", value);
            }
        }

        // <summary>
        // Version Number
        // </summary>
        public long? VersionNumber
        {
            get
            {
                return this.GetAttributeValue<long?>("VersionNumber");
            }
            set
            {
                this.SetAttributeValue("VersionNumber", value);
            }
        }

        // <summary>
        // Select whether the products included in the quote should be shipped to the specified address or held until the customer calls with further pick up or delivery instructions.
        // </summary>
        public bool? WillCall
        {
            get
            {
                return this.GetAttributeValue<bool?>("WillCall");
            }
            set
            {
                this.SetAttributeValue("WillCall", value);
            }
        }

        public class Fields
        {

            public const string _AccountId_value = "_accountid_value";

            public const string _ainos_lk_Customer_value = "_ainos_lk_customer_value";

            public const string _ainos_lk_DecisionMakerContact_value = "_ainos_lk_decisionmakercontact_value";

            public const string _ainos_managertoapprove_value = "_ainos_managertoapprove_value";

            public const string _ainos_SalesAssistant_value = "_ainos_salesassistant_value";

            public const string _ainos_secondaccountmanagerid_value = "_ainos_secondaccountmanagerid_value";

            public const string _CampaignId_value = "_campaignid_value";

            public const string _ContactId_value = "_contactid_value";

            public const string _CreatedBy_value = "_createdby_value";

            public const string _CreatedOnBehalfBy_value = "_createdonbehalfby_value";

            public const string _ModifiedBy_value = "_modifiedby_value";

            public const string _ModifiedOnBehalfBy_value = "_modifiedonbehalfby_value";

            public const string _OpportunityId_value = "_opportunityid_value";

            public const string _OwnerId_value = "_ownerid_value";

            public const string _OwningBusinessUnit_value = "_owningbusinessunit_value";

            public const string _OwningTeam_value = "_owningteam_value";

            public const string _OwningUser_value = "_owninguser_value";

            public const string _PriceLevelId_value = "_pricelevelid_value";

            public const string _SLAId_value = "_slaid_value";

            public const string _SLAInvokedId_value = "_slainvokedid_value";

            public const string _TransactionCurrencyId_value = "_transactioncurrencyid_value";

            public const string AccountId = "accountid";

            public const string AccountIdName = "accountidname";

            public const string AccountIdYomiName = "accountidyominame";

            public const string ainos_BusinessType = "ainos_businesstype";

            public const string ainos_businesstypeName = "ainos_businesstypename";

            public const string ainos_EstimatedOneShotRevenue = "ainos_estimatedoneshotrevenue";

            public const string ainos_estimatedoneshotrevenue_Base = "ainos_estimatedoneshotrevenue_base";

            public const string ainos_EstimatedRecurringRevenue = "ainos_estimatedrecurringrevenue";

            public const string ainos_estimatedrecurringrevenue_Base = "ainos_estimatedrecurringrevenue_base";

            public const string ainos_int_DurationinMonth = "ainos_int_durationinmonth";

            public const string ainos_lk_Customer = "ainos_lk_customer";

            public const string ainos_lk_CustomerName = "ainos_lk_customername";

            public const string ainos_lk_CustomerYomiName = "ainos_lk_customeryominame";

            public const string ainos_lk_DecisionMakerContact = "ainos_lk_decisionmakercontact";

            public const string ainos_lk_DecisionMakerContactName = "ainos_lk_decisionmakercontactname";

            public const string ainos_lk_DecisionMakerContactYomiName = "ainos_lk_decisionmakercontactyominame";

            public const string ainos_managertoapprove = "ainos_managertoapprove";

            public const string ainos_managertoapproveName = "ainos_managertoapprovename";

            public const string ainos_managertoapproveYomiName = "ainos_managertoapproveyominame";

            public const string ainos_mastersapreference = "ainos_mastersapreference";

            public const string ainos_OpporunityID = "ainos_opporunityid";

            public const string ainos_os_level1 = "ainos_os_level1";

            public const string ainos_os_level1Name = "ainos_os_level1name";

            public const string ainos_quoteapproved = "ainos_quoteapproved";

            public const string ainos_quoteapprovedName = "ainos_quoteapprovedname";

            public const string ainos_requestforapproval = "ainos_requestforapproval";

            public const string ainos_requestforapprovalName = "ainos_requestforapprovalname";

            public const string ainos_SalesAssistant = "ainos_salesassistant";

            public const string ainos_SalesAssistantName = "ainos_salesassistantname";

            public const string ainos_SalesAssistantYomiName = "ainos_salesassistantyominame";

            public const string ainos_secondaccountmanagerid = "ainos_secondaccountmanagerid";

            public const string ainos_secondaccountmanageridName = "ainos_secondaccountmanageridname";

            public const string ainos_secondaccountmanageridYomiName = "ainos_secondaccountmanageridyominame";

            public const string ainos_StatusQuote = "ainos_statusquote";

            public const string ainos_statusquoteName = "ainos_statusquotename";

            public const string BillTo_AddressId = "billto_addressid";

            public const string BillTo_City = "billto_city";

            public const string BillTo_Composite = "billto_composite";

            public const string BillTo_ContactName = "billto_contactname";

            public const string BillTo_Country = "billto_country";

            public const string BillTo_Fax = "billto_fax";

            public const string BillTo_Line1 = "billto_line1";

            public const string BillTo_Line2 = "billto_line2";

            public const string BillTo_Line3 = "billto_line3";

            public const string BillTo_Name = "billto_name";

            public const string BillTo_PostalCode = "billto_postalcode";

            public const string BillTo_StateOrProvince = "billto_stateorprovince";

            public const string BillTo_Telephone = "billto_telephone";

            public const string CampaignId = "campaignid";

            public const string CampaignIdName = "campaignidname";

            public const string ClosedOn = "closedon";

            public const string ContactId = "contactid";

            public const string ContactIdName = "contactidname";

            public const string ContactIdYomiName = "contactidyominame";

            public const string CreatedBy = "createdby";

            public const string CreatedByName = "createdbyname";

            public const string CreatedByYomiName = "createdbyyominame";

            public const string CreatedOn = "createdon";

            public const string CreatedOnBehalfBy = "createdonbehalfby";

            public const string CreatedOnBehalfByName = "createdonbehalfbyname";

            public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";

            public const string CustomerId = "customerid";

            public const string CustomerIdName = "customeridname";

            public const string CustomerIdType = "customeridtype";

            public const string CustomerIdYomiName = "customeridyominame";

            public const string Description = "description";

            public const string DiscountAmount = "discountamount";

            public const string DiscountAmount_Base = "discountamount_base";

            public const string DiscountPercentage = "discountpercentage";

            public const string EffectiveFrom = "effectivefrom";

            public const string EffectiveTo = "effectiveto";

            public const string EmailAddress = "emailaddress";

            public const string ExchangeRate = "exchangerate";

            public const string ExpiresOn = "expireson";

            public const string FreightAmount = "freightamount";

            public const string FreightAmount_Base = "freightamount_base";

            public const string FreightTermsCode = "freighttermscode";

            public const string FreightTermsCodeName = "freighttermscodename";

            public const string ImportSequenceNumber = "importsequencenumber";

            public const string LastOnHoldTime = "lastonholdtime";

            public const string ModifiedBy = "modifiedby";

            public const string ModifiedByName = "modifiedbyname";

            public const string ModifiedByYomiName = "modifiedbyyominame";

            public const string ModifiedOn = "modifiedon";

            public const string ModifiedOnBehalfBy = "modifiedonbehalfby";

            public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";

            public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";

            public const string Name = "name";

            public const string OnHoldTime = "onholdtime";

            public const string OpportunityId = "opportunityid";

            public const string OpportunityIdName = "opportunityidname";

            public const string OverriddenCreatedOn = "overriddencreatedon";

            public const string OwnerId = "ownerid";

            public const string OwnerIdName = "owneridname";

            public const string OwnerIdType = "owneridtype";

            public const string OwnerIdYomiName = "owneridyominame";

            public const string OwningBusinessUnit = "owningbusinessunit";

            public const string OwningTeam = "owningteam";

            public const string OwningUser = "owninguser";

            public const string PaymentTermsCode = "paymenttermscode";

            public const string PaymentTermsCodeName = "paymenttermscodename";

            public const string PriceLevelId = "pricelevelid";

            public const string PriceLevelIdName = "pricelevelidname";

            public const string PricingErrorCode = "pricingerrorcode";

            public const string PricingErrorCodeName = "pricingerrorcodename";

            public const string ProcessId = "processid";

            public const string QuoteId = "quoteid";

            public const string QuoteNumber = "quotenumber";

            public const string RequestDeliveryBy = "requestdeliveryby";

            public const string RevisionNumber = "revisionnumber";

            public const string ShippingMethodCode = "shippingmethodcode";

            public const string ShippingMethodCodeName = "shippingmethodcodename";

            public const string ShipTo_AddressId = "shipto_addressid";

            public const string ShipTo_City = "shipto_city";

            public const string ShipTo_Composite = "shipto_composite";

            public const string ShipTo_ContactName = "shipto_contactname";

            public const string ShipTo_Country = "shipto_country";

            public const string ShipTo_Fax = "shipto_fax";

            public const string ShipTo_FreightTermsCode = "shipto_freighttermscode";

            public const string ShipTo_FreightTermsCodeName = "shipto_freighttermscodename";

            public const string ShipTo_Line1 = "shipto_line1";

            public const string ShipTo_Line2 = "shipto_line2";

            public const string ShipTo_Line3 = "shipto_line3";

            public const string ShipTo_Name = "shipto_name";

            public const string ShipTo_PostalCode = "shipto_postalcode";

            public const string ShipTo_StateOrProvince = "shipto_stateorprovince";

            public const string ShipTo_Telephone = "shipto_telephone";

            public const string SkipPriceCalculation = "skippricecalculation";

            public const string skippricecalculationName = "skippricecalculationname";

            public const string SLAId = "slaid";

            public const string SLAInvokedId = "slainvokedid";

            public const string SLAInvokedIdName = "slainvokedidname";

            public const string SLAName = "slaname";

            public const string StageId = "stageid";

            public const string StateCode = "statecode";

            public const string StateCodeName = "statecodename";

            public const string StatusCode = "statuscode";

            public const string StatusCodeName = "statuscodename";

            public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";

            public const string TotalAmount = "totalamount";

            public const string TotalAmount_Base = "totalamount_base";

            public const string TotalAmountLessFreight = "totalamountlessfreight";

            public const string TotalAmountLessFreight_Base = "totalamountlessfreight_base";

            public const string TotalDiscountAmount = "totaldiscountamount";

            public const string TotalDiscountAmount_Base = "totaldiscountamount_base";

            public const string TotalLineItemAmount = "totallineitemamount";

            public const string TotalLineItemAmount_Base = "totallineitemamount_base";

            public const string TotalLineItemDiscountAmount = "totallineitemdiscountamount";

            public const string TotalLineItemDiscountAmount_Base = "totallineitemdiscountamount_base";

            public const string TotalTax = "totaltax";

            public const string TotalTax_Base = "totaltax_base";

            public const string TransactionCurrencyId = "transactioncurrencyid";

            public const string TransactionCurrencyIdName = "transactioncurrencyidname";

            public const string TraversedPath = "traversedpath";

            public const string UniqueDscId = "uniquedscid";

            public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";

            public const string VersionNumber = "versionnumber";

            public const string WillCall = "willcall";

            public const string WillCallName = "willcallname";

            public const string Id = "quoteid";
        }

        public class Properties
        {

            public const string ainos_lk_Customer = "ainos_lk_Customer";

            public const string ainos_lk_DecisionMakerContact = "ainos_lk_DecisionMakerContact";

            public const string ainos_managertoapprove = "ainos_managertoapprove";

            public const string ainos_SalesAssistant = "ainos_SalesAssistant";

            public const string ainos_secondaccountmanagerid = "ainos_secondaccountmanagerid";

            public const string campaignid = "campaignid";

            public const string contactquotes_association = "contactquotes_association";

            public const string createdby = "createdby";

            public const string createdonbehalfby = "createdonbehalfby";

            public const string customerid_account = "customerid_account";

            public const string customerid_contact = "customerid_contact";

            public const string modifiedby = "modifiedby";

            public const string modifiedonbehalfby = "modifiedonbehalfby";

            public const string opportunityid = "opportunityid";

            public const string ownerid = "ownerid";

            public const string owningbusinessunit = "owningbusinessunit";

            public const string owningteam = "owningteam";

            public const string owninguser = "owninguser";

            public const string pricelevelid = "pricelevelid";

            public const string sla_quote_sla = "sla_quote_sla";

            public const string slainvokedid_quote_sla = "slainvokedid_quote_sla";

            public const string stageid_processstage = "stageid_processstage";

            public const string transactioncurrencyid = "transactioncurrencyid";
        }

        public class Schemas
        {

            public const string AccountId = "AccountId";

            public const string AccountIdName = "AccountIdName";

            public const string AccountIdYomiName = "AccountIdYomiName";

            public const string ainos_BusinessType = "ainos_BusinessType";

            public const string ainos_businesstypeName = "ainos_businesstypeName";

            public const string ainos_EstimatedOneShotRevenue = "ainos_EstimatedOneShotRevenue";

            public const string ainos_estimatedoneshotrevenue_Base = "ainos_estimatedoneshotrevenue_Base";

            public const string ainos_EstimatedRecurringRevenue = "ainos_EstimatedRecurringRevenue";

            public const string ainos_estimatedrecurringrevenue_Base = "ainos_estimatedrecurringrevenue_Base";

            public const string ainos_int_DurationinMonth = "ainos_int_DurationinMonth";

            public const string ainos_lk_Customer = "ainos_lk_Customer";

            public const string ainos_lk_CustomerName = "ainos_lk_CustomerName";

            public const string ainos_lk_CustomerYomiName = "ainos_lk_CustomerYomiName";

            public const string ainos_lk_DecisionMakerContact = "ainos_lk_DecisionMakerContact";

            public const string ainos_lk_DecisionMakerContactName = "ainos_lk_DecisionMakerContactName";

            public const string ainos_lk_DecisionMakerContactYomiName = "ainos_lk_DecisionMakerContactYomiName";

            public const string ainos_managertoapprove = "ainos_managertoapprove";

            public const string ainos_managertoapproveName = "ainos_managertoapproveName";

            public const string ainos_managertoapproveYomiName = "ainos_managertoapproveYomiName";

            public const string ainos_mastersapreference = "ainos_mastersapreference";

            public const string ainos_OpporunityID = "ainos_OpporunityID";

            public const string ainos_os_level1 = "ainos_os_level1";

            public const string ainos_os_level1Name = "ainos_os_level1Name";

            public const string ainos_quoteapproved = "ainos_quoteapproved";

            public const string ainos_quoteapprovedName = "ainos_quoteapprovedName";

            public const string ainos_requestforapproval = "ainos_requestforapproval";

            public const string ainos_requestforapprovalName = "ainos_requestforapprovalName";

            public const string ainos_SalesAssistant = "ainos_SalesAssistant";

            public const string ainos_SalesAssistantName = "ainos_SalesAssistantName";

            public const string ainos_SalesAssistantYomiName = "ainos_SalesAssistantYomiName";

            public const string ainos_secondaccountmanagerid = "ainos_secondaccountmanagerid";

            public const string ainos_secondaccountmanageridName = "ainos_secondaccountmanageridName";

            public const string ainos_secondaccountmanageridYomiName = "ainos_secondaccountmanageridYomiName";

            public const string ainos_StatusQuote = "ainos_StatusQuote";

            public const string ainos_statusquoteName = "ainos_statusquoteName";

            public const string BillTo_AddressId = "BillTo_AddressId";

            public const string BillTo_City = "BillTo_City";

            public const string BillTo_Composite = "BillTo_Composite";

            public const string BillTo_ContactName = "BillTo_ContactName";

            public const string BillTo_Country = "BillTo_Country";

            public const string BillTo_Fax = "BillTo_Fax";

            public const string BillTo_Line1 = "BillTo_Line1";

            public const string BillTo_Line2 = "BillTo_Line2";

            public const string BillTo_Line3 = "BillTo_Line3";

            public const string BillTo_Name = "BillTo_Name";

            public const string BillTo_PostalCode = "BillTo_PostalCode";

            public const string BillTo_StateOrProvince = "BillTo_StateOrProvince";

            public const string BillTo_Telephone = "BillTo_Telephone";

            public const string CampaignId = "CampaignId";

            public const string CampaignIdName = "CampaignIdName";

            public const string ClosedOn = "ClosedOn";

            public const string ContactId = "ContactId";

            public const string ContactIdName = "ContactIdName";

            public const string ContactIdYomiName = "ContactIdYomiName";

            public const string CreatedBy = "CreatedBy";

            public const string CreatedByName = "CreatedByName";

            public const string CreatedByYomiName = "CreatedByYomiName";

            public const string CreatedOn = "CreatedOn";

            public const string CreatedOnBehalfBy = "CreatedOnBehalfBy";

            public const string CreatedOnBehalfByName = "CreatedOnBehalfByName";

            public const string CreatedOnBehalfByYomiName = "CreatedOnBehalfByYomiName";

            public const string CustomerId = "CustomerId";

            public const string CustomerIdName = "CustomerIdName";

            public const string CustomerIdType = "CustomerIdType";

            public const string CustomerIdYomiName = "CustomerIdYomiName";

            public const string Description = "Description";

            public const string DiscountAmount = "DiscountAmount";

            public const string DiscountAmount_Base = "DiscountAmount_Base";

            public const string DiscountPercentage = "DiscountPercentage";

            public const string EffectiveFrom = "EffectiveFrom";

            public const string EffectiveTo = "EffectiveTo";

            public const string EmailAddress = "EmailAddress";

            public const string ExchangeRate = "ExchangeRate";

            public const string ExpiresOn = "ExpiresOn";

            public const string FreightAmount = "FreightAmount";

            public const string FreightAmount_Base = "FreightAmount_Base";

            public const string FreightTermsCode = "FreightTermsCode";

            public const string FreightTermsCodeName = "FreightTermsCodeName";

            public const string ImportSequenceNumber = "ImportSequenceNumber";

            public const string LastOnHoldTime = "LastOnHoldTime";

            public const string ModifiedBy = "ModifiedBy";

            public const string ModifiedByName = "ModifiedByName";

            public const string ModifiedByYomiName = "ModifiedByYomiName";

            public const string ModifiedOn = "ModifiedOn";

            public const string ModifiedOnBehalfBy = "ModifiedOnBehalfBy";

            public const string ModifiedOnBehalfByName = "ModifiedOnBehalfByName";

            public const string ModifiedOnBehalfByYomiName = "ModifiedOnBehalfByYomiName";

            public const string Name = "Name";

            public const string OnHoldTime = "OnHoldTime";

            public const string OpportunityId = "OpportunityId";

            public const string OpportunityIdName = "OpportunityIdName";

            public const string OverriddenCreatedOn = "OverriddenCreatedOn";

            public const string OwnerId = "OwnerId";

            public const string OwnerIdName = "OwnerIdName";

            public const string OwnerIdType = "OwnerIdType";

            public const string OwnerIdYomiName = "OwnerIdYomiName";

            public const string OwningBusinessUnit = "OwningBusinessUnit";

            public const string OwningTeam = "OwningTeam";

            public const string OwningUser = "OwningUser";

            public const string PaymentTermsCode = "PaymentTermsCode";

            public const string PaymentTermsCodeName = "PaymentTermsCodeName";

            public const string PriceLevelId = "PriceLevelId";

            public const string PriceLevelIdName = "PriceLevelIdName";

            public const string PricingErrorCode = "PricingErrorCode";

            public const string PricingErrorCodeName = "PricingErrorCodeName";

            public const string ProcessId = "ProcessId";

            public const string QuoteId = "QuoteId";

            public const string QuoteNumber = "QuoteNumber";

            public const string RequestDeliveryBy = "RequestDeliveryBy";

            public const string RevisionNumber = "RevisionNumber";

            public const string ShippingMethodCode = "ShippingMethodCode";

            public const string ShippingMethodCodeName = "ShippingMethodCodeName";

            public const string ShipTo_AddressId = "ShipTo_AddressId";

            public const string ShipTo_City = "ShipTo_City";

            public const string ShipTo_Composite = "ShipTo_Composite";

            public const string ShipTo_ContactName = "ShipTo_ContactName";

            public const string ShipTo_Country = "ShipTo_Country";

            public const string ShipTo_Fax = "ShipTo_Fax";

            public const string ShipTo_FreightTermsCode = "ShipTo_FreightTermsCode";

            public const string ShipTo_FreightTermsCodeName = "ShipTo_FreightTermsCodeName";

            public const string ShipTo_Line1 = "ShipTo_Line1";

            public const string ShipTo_Line2 = "ShipTo_Line2";

            public const string ShipTo_Line3 = "ShipTo_Line3";

            public const string ShipTo_Name = "ShipTo_Name";

            public const string ShipTo_PostalCode = "ShipTo_PostalCode";

            public const string ShipTo_StateOrProvince = "ShipTo_StateOrProvince";

            public const string ShipTo_Telephone = "ShipTo_Telephone";

            public const string SkipPriceCalculation = "SkipPriceCalculation";

            public const string skippricecalculationName = "skippricecalculationName";

            public const string SLAId = "SLAId";

            public const string SLAInvokedId = "SLAInvokedId";

            public const string SLAInvokedIdName = "SLAInvokedIdName";

            public const string SLAName = "SLAName";

            public const string StageId = "StageId";

            public const string StateCode = "StateCode";

            public const string StateCodeName = "StateCodeName";

            public const string StatusCode = "StatusCode";

            public const string StatusCodeName = "StatusCodeName";

            public const string TimeZoneRuleVersionNumber = "TimeZoneRuleVersionNumber";

            public const string TotalAmount = "TotalAmount";

            public const string TotalAmount_Base = "TotalAmount_Base";

            public const string TotalAmountLessFreight = "TotalAmountLessFreight";

            public const string TotalAmountLessFreight_Base = "TotalAmountLessFreight_Base";

            public const string TotalDiscountAmount = "TotalDiscountAmount";

            public const string TotalDiscountAmount_Base = "TotalDiscountAmount_Base";

            public const string TotalLineItemAmount = "TotalLineItemAmount";

            public const string TotalLineItemAmount_Base = "TotalLineItemAmount_Base";

            public const string TotalLineItemDiscountAmount = "TotalLineItemDiscountAmount";

            public const string TotalLineItemDiscountAmount_Base = "TotalLineItemDiscountAmount_Base";

            public const string TotalTax = "TotalTax";

            public const string TotalTax_Base = "TotalTax_Base";

            public const string TransactionCurrencyId = "TransactionCurrencyId";

            public const string TransactionCurrencyIdName = "TransactionCurrencyIdName";

            public const string TraversedPath = "TraversedPath";

            public const string UniqueDscId = "UniqueDscId";

            public const string UTCConversionTimeZoneCode = "UTCConversionTimeZoneCode";

            public const string VersionNumber = "VersionNumber";

            public const string WillCall = "WillCall";

            public const string WillCallName = "WillCallName";
            
        }
    }
}
